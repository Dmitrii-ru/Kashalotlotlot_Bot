"""add currency_id to user_currency_requests

Revision ID: f05e47cd1acb
Revises: 
Create Date: 2025-02-13 21:54:30.131989

"""
from datetime import datetime
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy import ForeignKey

# revision identifiers, used by Alembic.
revision: str = 'f05e47cd1acb'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('username', sa.String(), nullable=True),
        sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
        sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('user_id')
    )

    op.create_table('currencies',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('code', sa.String(), unique=True, nullable=False),
        sa.Column('count', sa.Integer(), default=0),
        sa.PrimaryKeyConstraint('id')
    )

    op.create_table('user_currency_requests',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), ForeignKey('users.user_id'), nullable=False),
        sa.Column('currency_id', sa.Integer(), ForeignKey('currencies.id'), nullable=False),
        sa.Column('timestamp', sa.DateTime(), default=datetime.utcnow),
        sa.PrimaryKeyConstraint('id')
    )


def downgrade() -> None:
    op.drop_table('user_currency_requests')
    op.drop_table('currencies')
    op.drop_table('users')

